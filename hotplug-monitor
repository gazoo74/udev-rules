#!/bin/bash
#
# Copyright 2017 GaÃ«l PORTAY <gael.portay@savoirfairelinux.com>
#
# Licensed under the MIT license.
#
# Setup monitors using XRandR
# See: https://wiki.archlinux.org/index.php/xrandr
#

set -e

PREFIX="/usr"

# Not called by hotplug
if [ -z "$DEVPATH" ]; then
	# Root does not need to su
	if [ "$(id -u)" -eq 0 ]; then
		su_root="sh"
	fi

	# Trigger uevent on card0
	exec ${su_root:-su root} -c 'echo change >/sys/class/drm/card0/uevent'
fi

# Called by hotplug
# Be safe, drop privileges
# Needs bash for the tiny bash ini-parser below
su - nobody -s "${SHELL:-/bin/bash}"

# Run extra scripts
run_parts() {
	local status dir="$PREFIX/libexec/${0##*/}.d"
	status="$(cat "/sys$DEVPATH/status")"
	if [ -d "$dir/" ] && \
	   ! run-parts --exit-on-error \
		       --arg "$status" --arg "$position" --arg "$name" "$dir"; then
		echo "Warning: $dir: Halted!" >&2
	fi
}

# Extract connector name from devpath
name="${DEVPATH##*/}"
name="${name#card*-}"

# Sanitized it to XRandR connector name
# For instance: HDMI-A-1 -> HDMI1; DP-1 -> DP1...
xname="$(echo "$name" | sed -e 's,-[A-Z],,' -e 's,-,,')"

NAME="$name"
XNAME="$xname"
export NAME XNAME

# Monitor is disconnected
if xrandr | grep -q "$xname disconnected"; then
	# Switch it off
	xrandr --output "$reference"  --auto --primary
	xrandr --output "$xname" --off

	# Callback extra scripts
	run_parts

	exit 0
fi

# Tiny bash ini-parser
ini_parser() {
	local ifs="$IFS"

	# Read file content into variable
	ini="$(<"$1")"

	# Convert from scalar to line-array
	IFS=$'\n'
	ini=( ${ini} )

	# Translate ini section into shell function
	ini=( ${ini[*]/#[/:;\}$'\n'ini_} )
	ini=( ${ini[*]/%]/\(\) \{} )

	# Move first element to the end
	ini[${#ini[*]} + 1]="${ini[0]}"
	ini[0]=

	# Evaluate translation
	# shellcheck disable=SC2116
	eval "$(echo "${ini[*]}")"

	IFS=$ifs
}

# export dmi
dmi() {
	for file in product_name product_serial product_uuid product_version \
	            sys_vendor; do
		var="${file//-/_}"
		var="__${var^^}"
		val="$(cat "/sys/devices/virtual/dmi/id/$file")"
		val="${val// /_}"
		eval export "$var"="$val"
	done
}

# Load global configuration if any
reference="LVDS1"
position="left"
for conf in $PWD/${0##*/}.conf $PREFIX/etc/${0##*/}.conf /etc/${0##*/}.conf; do
	if [ -e "$conf" ]; then
		ini_parser "$conf"
		break
	fi
done

# Load machine preferences if any
# __PRODUCT_UUID="EFB03401-5298-11CB-816D-AD9D95ED2A67"
# __PRODUCT_SERIAL="PK1KYNR"
# __PRODUCT_NAME="2306CTO"
# __PRODUCT_VERSION="ThinkPad_X230"
# __SYS_VENDOR="LENOVO"
for section in "${__PRODUCT_UUID}" \
	       "${__PRODUCT_SERIAL}" \
	       "${__SYS_VENDOR}_${__PRODUCT_NAME}" \
	       "${__SYS_VENDOR}_${__PRODUCT_VERSION}" \
	       "${__SYS_VENDOR}" \
	       "default"; do
	if declare -f "ini_$section"; then
		"ini_$section"
		break
	fi >/dev/null
done

# Parse edid if any
if [ -e "/sys$DEVPATH/edid" ]; then
	eval "$(edidcat --prefix _ --export "/sys$DEVPATH/edid")"
fi

# Extract connector name from devpath
name="${DEVPATH##*/}"
name="${name#card*-}"

# Sanitized it to XRandR connector name
# For instance: HDMI-A-1 -> HDMI1; DP-1 -> DP1...
xname="$(echo "$name" | sed -e 's,-[A-Z],,' -e 's,-,,')"

# Load connector preferences if any
#
# Example:
# _ID="LGD"
# _CODE=A303
# _SERIAL=0000
# _WEEK=0
# _YEAR=2012
# _EDID_VERSION=1
# _EDID_REVISION=3
# _TEXT="LG Display"
# _TEXT="LP125WH2-TLB2"
set -- "${_ID}_${_CODE}_${_SERIAL}_${_WEEK}_${_YEAR}" \
       "${_ID}_${_CODE}_${_SERIAL}_${_WEEK}" \
       "${_ID}_${_CODE}_${_SERIAL}" \
       "${_ID}_${_CODE}" \
       "${_ID}"

# shellcheck disable=SC2153
for arg in "${_NAME}" "${_TEXT}"; do
	if [ -z "$arg" ]; then
		continue
	fi

	set -- "$arg" "$@"
done

for monitor in "$@"; do
	for connector in "$name" "$xname" ""; do
		section="$monitor"
		if [ -z "$section" ]; then
			section="$connector"
		elif [ -n "$connector" ]; then
			section+=" $connector"
		fi


		# Sanitize spaces
		func="ini_${section// /_}"
		if ! declare -f "$func"; then
			unset section
			continue
		fi >/dev/null

		"$func"
		break
	done

	if [ -z "$section" ]; then
		export section monitor connector
		continue
	fi

	break
done

# Skip if it is the reference output
if [ "$xname" = "$reference" ]; then
	exit 0
fi

# Switch monitor on
xrandr --output "$xname" --auto "--$position-of" "$reference"

# Callback extra scripts
run_parts
